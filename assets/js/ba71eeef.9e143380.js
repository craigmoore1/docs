"use strict";(self.webpackChunkidentity_docs=self.webpackChunkidentity_docs||[]).push([[651],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return y}});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=a.createContext({}),d=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=d(e.components);return a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,s=r(e,["components","mdxType","originalType","parentName"]),p=d(n),y=o,h=p["".concat(c,".").concat(y)]||p[y]||u[y]||i;return n?a.createElement(h,l(l({ref:t},s),{},{components:n})):a.createElement(h,l({ref:t},s))}));function y(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,l=new Array(i);l[0]=p;var r={};for(var c in t)hasOwnProperty.call(t,c)&&(r[c]=t[c]);r.originalType=e,r.mdxType="string"==typeof e?e:o,l[1]=r;for(var d=2;d<i;d++)l[d]=n[d];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},291:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return c},default:function(){return y},frontMatter:function(){return r},metadata:function(){return d},toc:function(){return u}});var a=n(3117),o=n(102),i=(n(7294),n(3905)),l=["components"],r={},c="Identity Technology Showcase",d={unversionedId:"showcase/showcase",id:"showcase/showcase",title:"Identity Technology Showcase",description:"This guide will take you through the suite of Identity software available on Solana.",source:"@site/docs/showcase/showcase.md",sourceDirName:"showcase",slug:"/showcase/",permalink:"/docs/showcase/",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/showcase/showcase.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Yukon - Higher-level KYC and AML",permalink:"/docs/gateway-protocol/existing-gatekeeper-networks/yukon"},next:{title:"Cryptid",permalink:"/docs/cryptid/"}},s={},u=[{value:"Setup",id:"setup",level:2},{value:"Solana",id:"solana",level:3},{value:"SOL DID Client",id:"sol-did-client",level:3},{value:"Cryptid Client",id:"cryptid-client",level:3},{value:"Gateway Client",id:"gateway-client",level:3},{value:"Getting started with did:sol",id:"getting-started-with-didsol",level:2},{value:"Manipulating SOL DIDs",id:"manipulating-sol-dids",level:2},{value:"Controllers",id:"controllers",level:2},{value:"Cryptid Wallet UI",id:"cryptid-wallet-ui",level:2},{value:"Gateway",id:"gateway",level:2},{value:"Credentials &amp; Gateway",id:"credentials--gateway",level:2}],p={toc:u};function y(e){var t=e.components,n=(0,o.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"identity-technology-showcase"},"Identity Technology Showcase"),(0,i.kt)("p",null,"This guide will take you through the suite of Identity software available on Solana."),(0,i.kt)("h2",{id:"setup"},"Setup"),(0,i.kt)("p",null,"For this demo you'll need the following setup on your machine:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Node 14+"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"yarn")),(0,i.kt)("li",{parentName:"ul"},"Solana Tool Suite (1.8.0+)"),(0,i.kt)("li",{parentName:"ul"},"@identity.com/sol-did-client"),(0,i.kt)("li",{parentName:"ul"},"@identity.com/cryptid-cli"),(0,i.kt)("li",{parentName:"ul"},"@identity.com/solana-gatekeeper-lib")),(0,i.kt)("p",null,"For demo purposes we will use the ",(0,i.kt)("inlineCode",{parentName:"p"},"node:16")," docker image that comes with ",(0,i.kt)("inlineCode",{parentName:"p"},"node")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"yarn"),"\nand install all relevant software inside this dedicated environment"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"$ docker run -it node:16 /bin/bash\n")),(0,i.kt)("h3",{id:"solana"},"Solana"),(0,i.kt)("p",null,"The Solana Tool Suite will allow you to interact with Solana via the cli.  "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},'# Install the Solana tool suite\n$ sh -c "$(curl -sSfL https://release.solana.com/v1.8.1/install)"\n\n# Export the given path (or and add it to .profile (or equivalent for your shell)) e.g.\n$ export PATH="$HOME/.local/share/solana/install/active_release/bin:$PATH"\n\n# Check that Solana is installed and accessible\n$ solana --version\n\n# Setup a new key-pair for the demo\n$ solana-keygen new\n\n# We do this demo in Devnet\n$ solana config set -u devnet\n')),(0,i.kt)("h3",{id:"sol-did-client"},"SOL DID Client"),(0,i.kt)("p",null,"The SOL DID client allows you to manage DID documents on Solana."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"$ yarn global add @identity.com/sol-did-client\n")),(0,i.kt)("h3",{id:"cryptid-client"},"Cryptid Client"),(0,i.kt)("p",null,"The Cryptid client allows you to manage your Cryptid account on the cli."),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/identity-com/cryptid"},"See here")," for more information on Cryptid."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"$ yarn global add @identity.com/cryptid-cli\n\n$ cryptid --help\n")),(0,i.kt)("h3",{id:"gateway-client"},"Gateway Client"),(0,i.kt)("p",null,'The gateway client allows the management of "Gateway Tokens". A gateway token is required for a user to prove that they have\nbeen verified by a gatekeeper before being allowed to use certain on-chain applications. The rules required for a\ngatekeeper to issue a token could include things like age checks, OFAC checks, etc.'),(0,i.kt)("p",null,"More information can be found ",(0,i.kt)("a",{parentName:"p",href:"https://identity-com.github.io/on-chain-identity-gateway"},"here"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"$ yarn global add @identity.com/solana-gatekeeper-lib\n\n$ gateway --help\n")),(0,i.kt)("h2",{id:"getting-started-with-didsol"},"Getting started with did:sol"),(0,i.kt)("p",null,"Here we show how to display your Solana address using the Solana client, and displaying your DID document\nusing the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/identity-com/sol-did"},"sol-did")," cli."),(0,i.kt)("p",null,"You can follow the steps below and follow along on YouTube: ",(0,i.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=G4vYa0uxYcs"},"https://www.youtube.com/watch?v=G4vYa0uxYcs")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"# Display your Solana address\n$ solana address\n\n# A DID is automatically derived from any solana public key. Display the DID document.\n$ sol did:sol:devnet:$(solana address)\n")),(0,i.kt)("p",null,"Visit ",(0,i.kt)("a",{parentName:"p",href:"https://did.civic.com"},"https://did.civic.com")," and resolve the above DID using the Universal Resolver."),(0,i.kt)("h2",{id:"manipulating-sol-dids"},"Manipulating SOL DIDs"),(0,i.kt)("p",null,"Below is an introduction to ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/identity-com/cryptid"},"Cryptid"),", a tool for manipulating DID\ndocuments on Solana. In this example, we will demonstrate key rotation using the Cryptid CLI tool by:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"adding an additional key to your DID"),(0,i.kt)("li",{parentName:"ul"},"removing your original key (e.g. if it has been compromised)"),(0,i.kt)("li",{parentName:"ul"},"retaining access to your Cryptid account via the additional key")),(0,i.kt)("p",null,"You can go through the steps below and follow along on YouTube: ",(0,i.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=72Oo11qy7ug"},"https://www.youtube.com/watch?v=72Oo11qy7ug")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"# Initialize Cryptid configuration (using your Solana key by default)\n$ cryptid init\n\n# View the Cryptid configuration\n$ cryptid config\n\n# View your DID document\n$ cryptid document\n\n# Airdop SOL to the signing key and Cryptid account (so that we can add additional keys to our account)\n$ cryptid airdrop\n\n# Generate a new Solana key\n$ solana-keygen new -o key2.json\n\n# Add the new public key to your Cryptid account, with 'key2' as an alias\n$ cryptid key add <pubkey> key2\n\n# Transfer SOL to the new key\n$ cryptid transfer <pubkey> 1000000\n\n# View the updated DID document (with the additional key added)\n$ cryptid document\n\n# Update Cryptid configuration to use the new key by default\n$ cryptid config set keyFile $(pwd)/key2.json\n\n# Remove the default key\n$ cryptid key remove default\n\n# Check the updated DID document\n$ cryptid document\n\n# Update Cryptid configuration to use the original (default) key\n$ cryptid config set keyFile $HOME/.config/solana/id.json\n\n# Expect transfer of using the removed key to fail\n$ cryptid transfer <pubkey> 1000000\n\n# Switch back to your new key\n$ cryptid config set keyFile $(pwd)/key2.json\n")),(0,i.kt)("h2",{id:"controllers"},"Controllers"),(0,i.kt)("p",null,"Here we show how you can use ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/identity-com/cryptid"},"Cryptid")," to setup one DID to be a controller of\nanother DID. For example, if a DID represents a business in the real world, the CEO's DID can be setup as a\ncontroller of the business. This will allow the CEO to sign as that business using their own keys."),(0,i.kt)("p",null,"You can go through the steps below and follow along on YouTube: ",(0,i.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=4oSTRnvnmNM"},"https://www.youtube.com/watch?v=4oSTRnvnmNM")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"# Create a key from which a new DID will be derived. We will be using this DID for the account we are going to control.\n$ solana-keygen new -o controlled.json\n\n# Create a Cryptid configuration for the new DID, called `controlled.yml` for the account we are going to control.\n$ cryptid init -k controlled.json -p controlled.yml\n\n# Check the configuration. With the `-c controlled.yml` you are instructing Cryptid to use the config of the new DID\n# instead of the config at `$HOME/.config/cryptid/config.yml`\n$ cryptid config -c controlled.yml\n\n# Fund the new DID's Cryptid account so that we can add the controller DID to it\n$ cryptid transfer <NEW_DID> 100000000\n\n# Fund the #default signer\n$ cryptid transfer <pubkey controlled.json> 100000000\n\n# Add your main account as a controller of the new DID \n$ cryptid controller add -c controlled.yml <OLD_DID>\n\n# Add an alias for the controlled did (for convenience)\n$ cryptid alias controlled <NEW_DID>\n\n# Add an alias for your original did (for convenience)\n$ cryptid alias me <OLD_DID>\n\n# Check the DID document for the controlled Cryptid account. \n# By using `--as controlled`, we are instructing Cryptid to perform actions using your default DID while controlling\n# the `controlled` DID.\n$ cryptid document --as controlled\n\n# Check the balance for the controlled Cryptid account\n$ cryptid balance --as controlled\n\n# Perform a transfer transaction from the controlled account, signing with the default account.\n$ cryptid transfer me 0.1 --as controlled\n")),(0,i.kt)("p",null,"Browse to the link provided to view your transaction on ",(0,i.kt)("a",{parentName:"p",href:"https://explorer.identity.com/"},"explorer.identity.com")),(0,i.kt)("h2",{id:"cryptid-wallet-ui"},"Cryptid Wallet UI"),(0,i.kt)("p",null,"We can achieve the same controller relationship as above, by adding our Cryptid UI wallet as a controller to the account\ncreated above."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Visit ",(0,i.kt)("a",{parentName:"li",href:"http://cryptid.identity.com"},"http://cryptid.identity.com")),(0,i.kt)("li",{parentName:"ul"},"Create a new Cryptid account by connecting a wallet"),(0,i.kt)("li",{parentName:"ul"},"Airdrop using UI")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"# Add your UI did as a controller to your CLI account\n$ cryptid controller add -c controlled.yml <UI_DID>\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Add controlled DID to UI"),(0,i.kt)("li",{parentName:"ul"},"Transfer 0.1 from controlled to UI Cryptid account")),(0,i.kt)("h2",{id:"gateway"},"Gateway"),(0,i.kt)("p",null,"Here we will show how to issue a gateway token to a Cryptid address from a public dummy gatekeeper.\nThis example will show how you cannot mint a NFT until a gateway token has been issued."),(0,i.kt)("p",null,"You can go through the steps below and follow along on YouTube: ",(0,i.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=4oSTRnvnmNM"},"https://www.youtube.com/watch?v=4oSTRnvnmNM")),(0,i.kt)("p",null,"Visit ",(0,i.kt)("a",{parentName:"p",href:"http://candy.identity.com"},"http://candy.identity.com")," and notice that you cannot yet mint an NFT."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"# Issue a gateway token to your Cryptid address\n$ gateway issue -g $HOME/.config/solana/id.json -c devnet <CONTROLLED CRYPTID ADDRESS>\n")),(0,i.kt)("p",null,"Visit ",(0,i.kt)("a",{parentName:"p",href:"http://candy.identity.com"},"http://candy.identity.com")," again, and notice that you can now mint an NFT."),(0,i.kt)("h2",{id:"credentials--gateway"},"Credentials & Gateway"),(0,i.kt)("p",null,'Here is an end-to-end showcase to show a "real life" example of a gateway token issuance based on credentials. This will\nshow how you cannot mint and NFT until you\'ve gone through a Civic KYC process, signed the credentials with Cryptid\nand issued a gateway token to your Cryptid account.'),(0,i.kt)("p",null,"Identity.com are partnered with Civic, and the Civic KYC process is used in the demo application. It is not a\npre-requisite for receiving a gateway token."),(0,i.kt)("p",null,"You can go through the steps below and follow along on YouTube: ",(0,i.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=72Oo11qy7ug"},"https://www.youtube.com/watch?v=72Oo11qy7ug")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Go to ",(0,i.kt)("a",{parentName:"li",href:"http://candy.identity.com"},"http://candy.identity.com")," (and fail to mint an NFT)"),(0,i.kt)("li",{parentName:"ul"},"Visit ",(0,i.kt)("a",{parentName:"li",href:"https://vp-demo.identity.com"},"https://vp-demo.identity.com")),(0,i.kt)("li",{parentName:"ul"},"Connect Cryptid wallet"),(0,i.kt)("li",{parentName:"ul"},"Scan QR code and onboard with Civic"),(0,i.kt)("li",{parentName:"ul"},"Sign credential with the Cryptid key"),(0,i.kt)("li",{parentName:"ul"},"Click button to get Gateway Token issued to your Cryptid account"),(0,i.kt)("li",{parentName:"ul"},"Mint NFT ",(0,i.kt)("a",{parentName:"li",href:"http://candy.identity.com"},"http://candy.identity.com"))))}y.isMDXComponent=!0}}]);